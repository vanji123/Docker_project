name: Publish Docker image

on:
  push:
    branches: ['master']

jobs:
  push_to_registry:
    name: Push Docker image to Docker Hub
    runs-on: ubuntu-latest
    steps:
      - name: Check out the repo
        uses: actions/checkout@v2
      
      - name: Log in to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      
      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v3
        with:
          images: vanji11/cicdflow
      
      - name: Build and push Docker image
        uses: docker/build-push-action@v2
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

      - name: Deploy to EC2
        env:
          EC2_PRIVATE_KEY: ${{ secrets.EC2_PRIVATE_KEY }}
          EC2_USER: ${{ secrets.EC2_USER }}
          EC2_HOST: ${{ secrets.EC2_HOST }}
        run: |
          echo "${{ secrets.EC2_PRIVATE_KEY }}" > private_key.pem
          chmod 600 private_key.pem

          echo "Attempting to SSH into ${EC2_HOST} as ${EC2_USER}"

          ssh -o StrictHostKeyChecking=no -o ConnectTimeout=10 -i private_key.pem -T ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST }} << 'EOF'
          if ! command -v docker &> /dev/null; then
           sudo apt-get update
           sudo apt-get install -y docker.io
           sudo systemctl start docker
           sudo systemctl enable docker
          fi
          EOF

            
            docker pull vanji11/cicdflow:${{ steps.meta.outputs.tags }}

            
            if [ "$(docker ps -q -f name=my-node-app)" ]; then
              docker stop my-node-app
              docker rm my-node-app
            fi

            
            docker run -d --name my-node-app -p 4000:4000 vanji11/cicdflow:${{ steps.meta.outputs.tags }}
          EOF
